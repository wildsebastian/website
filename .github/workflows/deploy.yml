name: Deploy Website

on:
  push:
    branches:
      - 'main'

jobs:
  check_formatting:
    name: Check formatting
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install dotnet-format tool
        run: dotnet tool install -g dotnet-format

      - name: Run dotnet format
        run: dotnet format --verify-no-changes


  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Login to DigitalOcean Container Registry
        uses: docker/login-action@v3
        with:
          registry: rg.fr-par.scw.cloud
          username: nologin
          password: ${{ secrets.SCALEWAY_REGISTRY_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Website/Dockerfile
          push: true
          tags: rg.fr-par.scw.cloud/wildsebastian/website:latest

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.11.0"

      - name: Terraform Init
        working-directory: ./infrastructure/production
        env:
          SCW_ACCESS_KEY: ${{ secrets.SCALEWAY_ACCESS_KEY }}
          SCW_SECRET_KEY: ${{ secrets.SCALEWAY_SECRET_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.SCALEWAY_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SCALEWAY_SECRET_KEY }}
          TF_VAR_db_admin_password: ${{ secrets.DB_ADMIN_PASSWORD }}
          TF_VAR_github_client_id: ${{ secrets.WEBSITE_GITHUB_CLIENT_ID }}
          TF_VAR_github_client_secret: ${{ secrets.WEBSITE_GITHUB_CLIENT_SECRET }}
        run: terraform init

      - name: Terraform Apply
        working-directory: ./infrastructure/production
        env:
          SCW_ACCESS_KEY: ${{ secrets.SCALEWAY_ACCESS_KEY }}
          SCW_SECRET_KEY: ${{ secrets.SCALEWAY_SECRET_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.SCALEWAY_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SCALEWAY_SECRET_KEY }}
          TF_VAR_db_admin_password: ${{ secrets.DB_ADMIN_PASSWORD }}
          TF_VAR_github_client_id: ${{ secrets.WEBSITE_GITHUB_CLIENT_ID }}
          TF_VAR_github_client_secret: ${{ secrets.WEBSITE_GITHUB_CLIENT_SECRET }}
        run: terraform apply -auto-approve
